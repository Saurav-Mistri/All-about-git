Introduction : 

Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.

Git is easy to learn and has a tiny footprint with lightning fast performance. It outclasses SCM tools like Subversion, CVS, Perforce, and ClearCase with features like cheap local branching, convenient staging areas, and multiple workflows.

For download windows:
https://git-scm.com/download/win

Checking installation:
Go in folder and check after clicking right-click of the mouse two option are added :
1) git gui here
2) git bash here

For changing name or email : 
-> For name : git config --global user.name Saurav-Mistri
-> For email : git config --global user.email sauravmistri21@gmail.com

For checking name or email : 
-> For name : git config --global user.name
-> For email : git config --global user.email

For opening VS-Code :
code .

For clear screen :
clear

For initialized empty git repository :
git init

For checking all folders(hidden also) : 
ls -lart

For checking status :
git status

For creating empty file :
touch filename.extension

For tracking only 1 file :
git add filename.extension

Note : Untracked file is in red color and Staged area's file is in green color

For tracking more than one file :
git add -A

For commit the file :
git commit -m "message"

For undo the file data :
Git checkout filename.extension

For undo all files data :
Git checkout -f

For checking log data after commiting :
git log

For checking last commit data:
git log -p -1
For checking last-2 commit data:
git log -p -2
->for exit : q

Note : When you modify any file then you must add that file into staging area

For commit the file without adding staging area :
git commit -a -m "message"

For check parent working directory:
pwd


For removing file from staging area :
git rm --cached filename.extension

For removing file from HDD :
git rm -f dlt.html

For summary of status(git status short hand) :
git status -s

For ignoring some file through the git :
touch .gitignore
example :
-> for ignoring all log files
*.log

Note : for ignoring any file you need to add that filename.extension in .gitignore file

For 